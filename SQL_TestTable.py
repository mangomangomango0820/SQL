#!/usr/bin/env python
# -*- coding: utf-8 -*-
# @Time    : 2021.10.7
# @Author  : Xueshan Zhang
# @File    : SQL_TestTable.py
'''
1. use psycopg2 to communicate between postgresql and python;
2. insert, select, update, delete elements to SQL database;
'''
import psycopg2

# 1. create 'conn' object via 'connect' method; connect with local database named 'Test_Database'
conn = psycopg2.connect(database="Test_Database", user="postgres", password="110697", host="127.0.0.1", port=5432)
print("> connect with postgreSQL Database 'Test_Database' successfully.")
print()

# 2. create 'cur' object via 'cursor' method to manipulate connected database
cur = conn.cursor()
# 2.1 SQL scripts: create an example table
cur.execute(
    '''
    CREATE TABLE TestTable
(
	ID     	INT GENERATED BY DEFAULT AS IDENTITY (cache 100), info text,
	Name1   varchar(100) 	NULL,
	Name2   varchar(100) 	NULL,
	Number1 INT 			NULL,
	Number2 INT 			NULL,
    Date1   DATE 	    default NULL,
	Date2   DATE 		default NULL
);
    ''')
# 2.2 commit SQL scripts to postgreSQL database via 'commit' method
conn.commit()
print(">>> create table 'TestTable' successfully.")
print()

# 2.3 insert elements and then select all to confirm the success of 0'insert'
sqlA = '''INSERT INTO TestTable(id, info, name1, name2, number1, number2, date1, date2)
         VALUES (1, 'example info', 10, 11, 15, 16, CURRENT_TIMESTAMP , CURRENT_DATE)'''
sqlB = '''INSERT INTO TestTable(id, info, name1, name2, number1, number2, date1, date2)
         VALUES (2, 'example info', 17, 18, 19, 20, CURRENT_TIMESTAMP , CURRENT_DATE)'''
cur.execute(sqlA)
cur.execute(sqlB)
conn.commit()
cur.execute("select * from TestTable")
list = cur.fetchall()
for i in list:
    print(i)
print(">>> insert elements into table 'TestTable' successfully.")
print()

# 2.4 update existing elements
sql = "UPDATE TestTable set info = %s, number1 = %s where id = %s"
info = 'update info'
number1 = 21
id = 1
text = [(info, number1, id)]
cur.executemany(sql, text)
conn.commit()
cur.execute("select * from TestTable")
list = cur.fetchall()
for i in list:
    print(i)
print(">>> update elements into table 'TestTable' successfully.")
print()

# 2.5 delete existing elements
sql = "DELETE from TestTable where id = %s"
id = 1
text = [(id,)]
cur.executemany(sql, text)
conn.commit()
cur.execute("select * from TestTable")
list = cur.fetchall()
for i in list:
    print(i)
print(">>> delete elements into table 'TestTable' successfully.")
print()

conn.close()
print("> close the connection successfully.")
